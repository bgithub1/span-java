//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.24 at 08:06:09 AM EDT 
//


package com.billybyte.spanjava.generated;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}fromCur"/>
 *         &lt;element ref="{}toCur"/>
 *         &lt;element ref="{}factor"/>
 *         &lt;element ref="{}hfactor" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "fromCur",
    "toCur",
    "factor",
    "hfactor"
})
@XmlRootElement(name = "curConv")
public class CurConv {

    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String fromCur;
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String toCur;
    @XmlElement(required = true)
    protected BigDecimal factor;
    protected List<Hfactor> hfactor;

    /**
     * Gets the value of the fromCur property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFromCur() {
        return fromCur;
    }

    /**
     * Sets the value of the fromCur property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFromCur(String value) {
        this.fromCur = value;
    }

    /**
     * Gets the value of the toCur property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToCur() {
        return toCur;
    }

    /**
     * Sets the value of the toCur property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setToCur(String value) {
        this.toCur = value;
    }

    /**
     * Gets the value of the factor property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getFactor() {
        return factor;
    }

    /**
     * Sets the value of the factor property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFactor(BigDecimal value) {
        this.factor = value;
    }

    /**
     * Gets the value of the hfactor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the hfactor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHfactor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Hfactor }
     * 
     * 
     */
    public List<Hfactor> getHfactor() {
        if (hfactor == null) {
            hfactor = new ArrayList<Hfactor>();
        }
        return this.hfactor;
    }

}
